apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  selector:
    matchLabels:
      app: jenkins
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: jenkins
      containers:
      - name: jenkins
        image: mustafaelhendy/jenkins_docker_image
        imagePullPolicy: IfNotPresent
        env:
        - name: JAVA_OPTS
          value: -Xmx2048m -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 50000
          protocol: TCP
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins
        - name: dockersock
          mountPath: /var/run/docker.sock

        - name: docker
          mountPath: /usr/bin/docker
          subPath: docker

        - name: kubernetes
          mountPath: /usr/bin/kubectl
          subPath: kubectl
      initContainers:
        - name: init-docker
          image: docker
          command: ["cp","/usr/local/bin/docker", "/opt/tmp"]
       
            
          volumeMounts:  
            - name: docker
              mountPath: /opt/tmp

        - name: init-k8s
          image: alpine/k8s:1.23.13
          command: ["cp","/usr/bin/kubectl","/opt/temp"]

          volumeMounts:
            - name: kubernetes
              mountPath: "/opt/temp"

      restartPolicy: Always
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 30
      volumes:
      - name: jenkins
        persistentVolumeClaim:
          claimName: jenkins-claim
      - name: docker
        emptyDir: {}

      - name: dockersock
        hostPath:
          path: /var/run/docker.sock

      - name: kubernetes
        emptyDir: {}

